{"version":3,"sources":["components/Loader/Loader.module.css","components/QuantityPerPage/QuantityPerPage.jsx","components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","services/pixabay-api.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Loader/Loader.jsx","App.js","index.js"],"names":["module","exports","QuantityPerPage","onChange","useState","value","setValue","useEffect","className","name","id","e","target","SearchBar","onChangeQuantity","onSubmitForm","query","setQuery","onSubmit","preventDefault","handleSubmitForm","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","previewUrl","imageUrl","onClickImage","onClick","src","alt","data-url","width","ImageGallery","galleryPhotos","onOpenModal","map","largeImageURL","webformatURL","axios","defaults","baseURL","galleryApi","API_KEY","fetchGallery","pageNumber","quantity","get","then","data","hits","result","Button","onLoadMore","modalRoot","document","querySelector","Modal","onCloseModal","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","currentTarget","handleBackDropClick","color","size","App","isLoading","s","loaderContainer","visible","height","timeout","gallery","setGallery","page","setPage","searchQuery","setSearchQuery","showModal","setShowModal","modalImageUrl","setModalImageUrl","setIsLoading","setQuantity","scrollToNextPage","toggleModal","pixabayApi","images","finally","scrollTo","top","documentElement","scrollHeight","behavior","url","dataset","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,gBAAkB,kC,8HCErB,SAASC,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SAAY,EAC1BC,mBAAS,GADiB,mBAC7CC,EAD6C,KACtCC,EADsC,KAOpD,OAJAC,qBAAU,WACRJ,EAASE,KACR,CAACF,EAAUE,IAGZ,yBACEG,UAAU,iBACVH,MAAOA,EACPI,KAAK,WACLC,GAAG,WACHP,SAAU,SAAAQ,GAAC,OAAIL,EAASK,EAAEC,OAAOP,QALnC,UAOE,wBAAQA,MAAM,IAAII,KAAK,WAAvB,eAGA,wBAAQJ,MAAM,IAAII,KAAK,WAAvB,eAGA,wBAAQJ,MAAM,KAAKI,KAAK,WAAxB,gBAGA,wBAAQJ,MAAM,KAAKI,KAAK,WAAxB,mBCvBS,SAASI,EAAT,GAAwD,IAAnCC,EAAkC,EAAlCA,iBAAkBC,EAAgB,EAAhBA,aAAgB,EAC1CX,mBAAS,IADiC,mBAC7DY,EAD6D,KACtDC,EADsD,KAWpE,OACE,yBAAQT,UAAU,YAAlB,UACE,uBAAMA,UAAU,aAAaU,SAAU,SAAAP,GAAC,OAVnB,SAAAA,GACvBA,EAAEQ,iBAEGH,IACLD,EAAaC,GACbC,EAAS,KAKqCG,CAAiBT,IAA7D,UACE,wBAAQU,KAAK,SAASb,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVa,KAAK,OACLC,aAAa,MACbjB,MAAOW,EACPO,WAAS,EACTC,YAAY,2BACZrB,SAAU,SAAAQ,GAAC,OAAIM,EAASN,EAAEC,OAAOP,aAGrC,cAACH,EAAD,CAAiBC,SAAUW,OC9BlB,SAASW,EAAT,GAIX,IAHFC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACAC,EACC,EADDA,aAEA,OACE,oBAAIpB,UAAU,mBAAmBqB,QAAS,SAAAlB,GAAC,OAAIiB,EAAajB,IAA5D,SACE,qBACEmB,IAAKJ,EACLK,IAAI,GACJvB,UAAU,yBACVwB,WAAUL,EACVM,MAAM,UCXC,SAASC,EAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,YACpD,OACE,oBAAI5B,UAAU,eAAd,SACG2B,EAAcE,KAAI,gBAAG3B,EAAH,EAAGA,GAAI4B,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,aAAtB,OACjB,cAACd,EAAD,CAEEC,WAAYa,EACZZ,SAAUW,EACVV,aAAcQ,GAHT1B,Q,6CCNf8B,IAAMC,SAASC,QAAU,0BAEzB,IAmBeC,EAnBI,CACjBC,QAAS,qCAEHC,aAHW,WAG6C,IAAD,+IAA1C7B,EAA0C,+BAAlC,GAAI8B,EAA8B,+BAAjB,EAAGC,EAAc,+BAAH,EAAG,SAC9CP,IACVQ,IADU,cAEFhC,EAFE,iBAEY8B,EAFZ,gBAE8B,EAAKF,QAFnC,6DAE+FG,IAEzGE,MAAK,qBAAGC,KAAgBC,QACxBF,MAAK,SAAAG,GAAM,OACVA,EAAOf,KAAI,kBAA0C,CACnD3B,GADS,EAAGA,GAEZ4B,cAFS,EAAOA,cAGhBC,aAHS,EAAsBA,oBAPsB,uFCLhD,SAASc,EAAT,GAAiC,IAAfC,EAAc,EAAdA,WAC/B,OACE,wBAAQ9C,UAAU,SAASa,KAAK,SAASQ,QAAS,kBAAMyB,KAAxD,uB,YCAEC,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAT,GAA4C,IAA3BC,EAA0B,EAA1BA,aAAchC,EAAY,EAAZA,SAC5CpB,qBAAU,WAER,OADAqD,OAAOC,iBAAiB,UAAWC,GAC5B,WACLF,OAAOG,oBAAoB,UAAWD,OAI1C,IAAMA,EAAgB,SAAAnD,GACL,WAAXA,EAAEqD,MACJL,KAUJ,OAAOM,uBACL,qBAAKzD,UAAU,UAAUqB,QAAS,SAAAlB,GAAC,OAPT,SAAAA,GACtBA,EAAEuD,gBAAkBvD,EAAEC,QACxB+C,IAKqCQ,CAAoBxD,IAA3D,SACE,sBAAKH,UAAU,QAAf,UACE,qBAAKA,UAAU,qBAAqBqB,QAAS,kBAAM8B,KAAnD,SACE,cAAC,IAAD,CAAsBS,MAAM,QAAQC,KAAK,WAE3C,qBAAKvC,IAAKH,EAAUI,IAAI,gBAG5BwB,G,8CC/BW,SAASe,EAAT,GAA6B,IAAdC,EAAa,EAAbA,UAC5B,OACE,qBAAK/D,UAAWgE,IAAEC,gBAAlB,SACE,cAAC,IAAD,CACEC,QAASH,EACTlD,KAAK,eACL+C,MAAM,UACNO,OAAQ,GACR1C,MAAO,GACP2C,QAAS,MCHF,SAASN,IAAO,IAAD,EACElE,mBAAS,IADX,mBACrByE,EADqB,KACZC,EADY,OAEJ1E,mBAAS,GAFL,mBAErB2E,EAFqB,KAEfC,EAFe,OAGU5E,mBAAS,IAHnB,mBAGrB6E,EAHqB,KAGRC,EAHQ,OAIM9E,oBAAS,GAJf,mBAIrB+E,EAJqB,KAIVC,EAJU,OAKchF,mBAAS,IALvB,mBAKrBiF,EALqB,KAKNC,EALM,OAMMlF,oBAAS,GANf,mBAMrBmE,EANqB,KAMVgB,EANU,OAOInF,mBAAS,GAPb,mBAOrB2C,EAPqB,KAOXyC,EAPW,KAS5BjF,qBAAU,WACJ0E,GACFpC,MAED,CAACoC,EAAalC,IAEjBxC,qBAAU,WACRkF,OAGF,IAAMC,EAAc,WAClBN,GAAcD,IAGVtC,EAAe,WACnB0C,GAAa,SAAAhB,GAAS,OAAKA,KAE3BoB,EACG9C,aAAaoC,EAAaF,EAAMhC,GAChCE,MAAK,SAAA2C,GACJd,GAAW,SAAAD,GAAO,4BAAQA,GAAR,YAAoBe,OACtCZ,GAAQ,SAAAD,GAAI,OAAIA,EAAO,QAExBc,SAAQ,kBAAMN,GAAa,SAAAhB,GAAS,OAAKA,SAkBxCkB,EAAmB,WACvB7B,OAAOkC,SAAS,CACdC,IAAKvC,SAASwC,gBAAgBC,aAC9BC,SAAU,YAId,OACE,qCACE,cAACrF,EAAD,CACEE,aAlBgB,SAAAC,GACpBkE,EAAelE,GACf8D,EAAW,IACXE,EAAQ,IAgBJlE,iBAbmB,SAAAT,GAAK,OAAImF,EAAYnF,MAe1C,iCACE,cAAC6B,EAAD,CAAcC,cAAe0C,EAASzC,YA7BpB,SAAAzB,GACtB,IAAMwF,EAAMxF,EAAEC,OAAOwF,QAAQD,IAE7BT,IACAJ,EAAiBa,MA0Bb,cAAC,EAAD,CAAQ5B,UAAWA,IAElBM,EAAQwB,OAAS,IAAM9B,GACtB,cAAClB,EAAD,CAAQC,WAAYT,IAGrBsC,GACC,cAACzB,EAAD,CAAO/B,SAAU0D,EAAe1B,aAAc+B,UC7ExDY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASiD,eAAe,W","file":"static/js/main.48a8fb21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__zdmiY\"};","import { useState, useEffect } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport default function QuantityPerPage({ onChange }) {\r\n  const [value, setValue] = useState(8);\r\n\r\n  useEffect(() => {\r\n    onChange(value);\r\n  }, [onChange, value]);\r\n\r\n  return (\r\n    <select\r\n      className=\"QuantitySelect\"\r\n      value={value}\r\n      name=\"quantity\"\r\n      id=\"quantity\"\r\n      onChange={e => setValue(e.target.value)}\r\n    >\r\n      <option value=\"4\" name=\"quantity\">\r\n        4\r\n      </option>\r\n      <option value=\"8\" name=\"quantity\">\r\n        8\r\n      </option>\r\n      <option value=\"12\" name=\"quantity\">\r\n        12\r\n      </option>\r\n      <option value=\"20\" name=\"quantity\">\r\n        20\r\n      </option>\r\n    </select>\r\n  );\r\n}\r\n\r\nQuantityPerPage.propTypes = {\r\n  onChange: propTypes.func.isRequired,\r\n};","import { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport QuantityPerPage from '../QuantityPerPage/QuantityPerPage';\r\n\r\nexport default function SearchBar({ onChangeQuantity, onSubmitForm }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleSubmitForm = e => {\r\n    e.preventDefault();\r\n\r\n    if (!query) return;\r\n    onSubmitForm(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={e => handleSubmitForm(e)}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          value={query}\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={e => setQuery(e.target.value)}\r\n        />\r\n      </form>\r\n      <QuantityPerPage onChange={onChangeQuantity} />\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmitForm: propTypes.func.isRequired,\r\n  onChangeQuantity: propTypes.func.isRequired,\r\n};","import propTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({\r\n  previewUrl,\r\n  imageUrl,\r\n  onClickImage,\r\n}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={e => onClickImage(e)}>\r\n      <img\r\n        src={previewUrl}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n        data-url={imageUrl}\r\n        width=\"150\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  previewUrl: propTypes.string,\r\n  imageUrl: propTypes.string,\r\n  onClickImage: propTypes.func,\r\n};","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport propTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ galleryPhotos, onOpenModal }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {galleryPhotos.map(({ id, largeImageURL, webformatURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          previewUrl={webformatURL}\r\n          imageUrl={largeImageURL}\r\n          onClickImage={onOpenModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  onOpenModal: propTypes.func,\r\n  galleryPhotos: propTypes.arrayOf(\r\n    propTypes.exact({\r\n      id: propTypes.number,\r\n      webformatURL: propTypes.string,\r\n      largeImageURL: propTypes.string,\r\n    }),\r\n  ),\r\n};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\nconst galleryApi = {\r\n  API_KEY: '13118160-85f169275baea695b5828e8ed',\r\n\r\n  async fetchGallery(query = '', pageNumber = 1, quantity = 4) {\r\n    return await axios\r\n      .get(\r\n        `/?q=${query}&page=${pageNumber}&key=${this.API_KEY}&image_type=photo&orientation=horizontal&per_page=${quantity}`,\r\n      )\r\n      .then(({ data }) => data.hits)\r\n      .then(result =>\r\n        result.map(({ id, largeImageURL, webformatURL }) => ({\r\n          id,\r\n          largeImageURL,\r\n          webformatURL,\r\n        })),\r\n      );\r\n  },\r\n};\r\n\r\nexport default galleryApi;","import propTypes from 'prop-types';\r\n\r\nexport default function Button({ onLoadMore }) {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={() => onLoadMore()}>\r\n      load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: propTypes.func,\r\n};","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ onCloseModal, imageUrl }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  const handleBackDropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={e => handleBackDropClick(e)}>\r\n      <div className=\"Modal\">\r\n        <div className=\"ModalButtonWrapper\" onClick={() => onCloseModal()}>\r\n          <AiOutlineCloseCircle color=\"white\" size=\"25px\" />\r\n        </div>\r\n        <img src={imageUrl} alt=\"photos\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './Loader.module.css';\r\n\r\nexport default function App({ isLoading }) {\r\n  return (\r\n    <div className={s.loaderContainer}>\r\n      <Loader\r\n        visible={isLoading}\r\n        type=\"BallTriangle\"\r\n        color=\"#00BFFF\"\r\n        height={50}\r\n        width={50}\r\n        timeout={0}\r\n      />\r\n    </div>\r\n  );\r\n}","// import { Component } from 'react';\nimport { useState, useEffect } from 'react';\n// import s from './App.module.css';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport pixabayApi from './services/pixabay-api';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from './components/Loader/Loader';\n\nexport default function App() {\n  const [gallery, setGallery] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalImageUrl, setModalImageUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [quantity, setQuantity] = useState(8);\n\n  useEffect(() => {\n    if (searchQuery) {\n      fetchGallery();\n    }\n  }, [searchQuery, quantity]);\n\n  useEffect(() => {\n    scrollToNextPage();\n  });\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const fetchGallery = () => {\n    setIsLoading(isLoading => !isLoading);\n\n    pixabayApi\n      .fetchGallery(searchQuery, page, quantity)\n      .then(images => {\n        setGallery(gallery => [...gallery, ...images]);\n        setPage(page => page + 1);\n      })\n      .finally(() => setIsLoading(isLoading => !isLoading));\n  };\n\n  const handleOpenModal = e => {\n    const url = e.target.dataset.url;\n\n    toggleModal();\n    setModalImageUrl(url);\n  };\n\n  const onChangeQuery = query => {\n    setSearchQuery(query);\n    setGallery([]);\n    setPage(1);\n  };\n\n  const onChangeQuantity = value => setQuantity(value);\n\n  const scrollToNextPage = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <>\n      <SearchBar\n        onSubmitForm={onChangeQuery}\n        onChangeQuantity={onChangeQuantity}\n      />\n      <main>\n        <ImageGallery galleryPhotos={gallery} onOpenModal={handleOpenModal} />\n        <Loader isLoading={isLoading} />\n\n        {gallery.length > 0 && !isLoading && (\n          <Button onLoadMore={fetchGallery} />\n        )}\n\n        {showModal && (\n          <Modal imageUrl={modalImageUrl} onCloseModal={toggleModal} />\n        )}\n      </main>\n    </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}